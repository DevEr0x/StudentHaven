/*
 Developed by: 
 Eric Mazza

 Date started: 
 06/06/2017

 Description:
 This is an application that I'm creating for my programming culminating, 
 it will allow teachers to log their students, and their information in an easy 
 to manage environment.

 */

import java.io.*;
import java.nio.*;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ermaz0018
 *
 *
 */
public class CulminatingProject extends javax.swing.JFrame {

    /**
     * Creates new form CulminatingProject
     */
    public CulminatingProject() {
        initComponents();
    }
    boolean loggedIn = false;
    String username;
    String path;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainTitle = new javax.swing.JLabel();
        titleSeperator = new javax.swing.JSeparator();
        mainPanelTabbed = new javax.swing.JTabbedPane();
        filePanel = new javax.swing.JPanel();
        titlePrompt = new javax.swing.JLabel();
        locationDesc1 = new javax.swing.JLabel();
        locationDesc2 = new javax.swing.JLabel();
        locationDesc3 = new javax.swing.JLabel();
        locationPromptLabel = new javax.swing.JLabel();
        pathInput = new javax.swing.JTextField();
        pathConfirmButton = new javax.swing.JButton();
        pathOutput = new javax.swing.JLabel();
        examplePrompt = new javax.swing.JLabel();
        example1 = new javax.swing.JLabel();
        example2 = new javax.swing.JLabel();
        redNoteLocationLabel = new javax.swing.JLabel();
        accountPanel = new javax.swing.JPanel();
        loginPanel = new javax.swing.JPanel();
        loginTitle = new javax.swing.JLabel();
        usernamePrompt = new javax.swing.JLabel();
        usernameInput = new javax.swing.JTextField();
        passwordPrompt = new javax.swing.JLabel();
        loginConfirm = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        passwordInput = new javax.swing.JPasswordField();
        newAccountPanel = new javax.swing.JPanel();
        newAccountTitle = new javax.swing.JLabel();
        newUsernamePrompt = new javax.swing.JLabel();
        newPasswordPrompt = new javax.swing.JLabel();
        newUsernameInput = new javax.swing.JTextField();
        newPasswordInput = new javax.swing.JPasswordField();
        newAccountConfirm = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        accountOutput = new javax.swing.JLabel();
        classroomCreatePanel = new javax.swing.JPanel();
        classroomTable = new javax.swing.JScrollPane();
        classroomTableDisplay = new javax.swing.JTable();
        addStudentPanel = new javax.swing.JPanel();
        newStudentLabel = new javax.swing.JLabel();
        studentNameInput = new javax.swing.JTextField();
        newScoreLabel = new javax.swing.JLabel();
        studentScoreInput = new javax.swing.JTextField();
        studentInfoSubmitButton = new javax.swing.JButton();
        addStudentPanelLabel = new javax.swing.JLabel();
        editStudentPanel = new javax.swing.JPanel();
        editStudentInfoSubmitButton = new javax.swing.JButton();
        editStudentNameLabel = new javax.swing.JLabel();
        selectedStudentInput = new javax.swing.JTextField();
        editStudentScoreLabel = new javax.swing.JLabel();
        newScoreInput = new javax.swing.JTextField();
        editStudentPanelLabel = new javax.swing.JLabel();
        deleteStudentPanel = new javax.swing.JPanel();
        deleteStudentConfirm = new javax.swing.JButton();
        deleteStudentPrompt = new javax.swing.JLabel();
        deleteStudentInput = new javax.swing.JTextField();
        deleteStudentPanelLabel = new javax.swing.JLabel();
        classroomOutput = new javax.swing.JLabel();
        updateTable = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        activeAccount = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainTitle.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        mainTitle.setForeground(new java.awt.Color(102, 102, 102));
        mainTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mainTitle.setText("Student Haven");

        titleSeperator.setForeground(new java.awt.Color(0, 0, 0));

        mainPanelTabbed.setToolTipText("");
        mainPanelTabbed.setName(""); // NOI18N
        mainPanelTabbed.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mainPanelTabbedMouseClicked(evt);
            }
        });

        filePanel.setBackground(new java.awt.Color(255, 255, 255));

        titlePrompt.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        titlePrompt.setForeground(new java.awt.Color(51, 51, 255));
        titlePrompt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titlePrompt.setText("Where do you want the application files to be stored?");

        locationDesc1.setText("In the space provided, you must type out the directory that you wish to store all the files for this program.");

        locationDesc2.setText("If this step is skipped, the program will not work as intended, so please just choose a directory to store your files.");

        locationDesc3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        locationDesc3.setText("Even if you're a returning user, please type out the directory you were using previously so the program knows where it's supposed to look.");

        locationPromptLabel.setText("Where should the files be stored:");

        pathInput.setText("D:/");

        pathConfirmButton.setText("Confirm");
        pathConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pathConfirmButtonActionPerformed(evt);
            }
        });

        pathOutput.setForeground(new java.awt.Color(255, 0, 51));
        pathOutput.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pathOutput.setText("Awaiting File Selection");

        examplePrompt.setForeground(new java.awt.Color(0, 0, 255));
        examplePrompt.setText("Examples:");

        example1.setText("D:/");

        example2.setText("C:/Program Files (x86)/");

        redNoteLocationLabel.setFont(new java.awt.Font("Tahoma", 3, 15)); // NOI18N
        redNoteLocationLabel.setForeground(new java.awt.Color(255, 0, 51));
        redNoteLocationLabel.setText("Make sure that you include a \"/\" at the end of the directory");

        javax.swing.GroupLayout filePanelLayout = new javax.swing.GroupLayout(filePanel);
        filePanel.setLayout(filePanelLayout);
        filePanelLayout.setHorizontalGroup(
            filePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titlePrompt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pathOutput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(filePanelLayout.createSequentialGroup()
                .addGroup(filePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(filePanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(filePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(locationDesc2)
                            .addComponent(locationDesc1)))
                    .addGroup(filePanelLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(filePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pathConfirmButton)
                            .addComponent(locationPromptLabel))
                        .addGap(18, 18, 18)
                        .addGroup(filePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pathInput, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(filePanelLayout.createSequentialGroup()
                                .addComponent(examplePrompt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(filePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(example2)
                                    .addComponent(example1)))))
                    .addGroup(filePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(locationDesc3))
                    .addGroup(filePanelLayout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(redNoteLocationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        filePanelLayout.setVerticalGroup(
            filePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titlePrompt)
                .addGap(18, 18, 18)
                .addComponent(locationDesc1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(locationDesc2)
                .addGap(18, 18, 18)
                .addComponent(locationDesc3)
                .addGap(52, 52, 52)
                .addGroup(filePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(locationPromptLabel)
                    .addComponent(pathInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(filePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pathConfirmButton)
                    .addGroup(filePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(examplePrompt)
                        .addComponent(example1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(example2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(redNoteLocationLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                .addComponent(pathOutput)
                .addContainerGap())
        );

        mainPanelTabbed.addTab("File Locations", filePanel);

        loginPanel.setBackground(new java.awt.Color(255, 255, 255));
        loginPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        loginTitle.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        loginTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loginTitle.setText("Log in");

        usernamePrompt.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        usernamePrompt.setText("Username:");

        passwordPrompt.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        passwordPrompt.setText("Password:");

        loginConfirm.setText("Confirm");
        loginConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginConfirmActionPerformed(evt);
            }
        });

        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loginTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usernamePrompt)
                            .addComponent(passwordPrompt))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(usernameInput, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(passwordInput)))
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(loginConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 86, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loginTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernamePrompt)
                    .addComponent(usernameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordPrompt)
                    .addComponent(passwordInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
                .addComponent(loginConfirm)
                .addGap(30, 30, 30))
        );

        newAccountPanel.setBackground(new java.awt.Color(255, 255, 255));
        newAccountPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        newAccountTitle.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        newAccountTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newAccountTitle.setText("Create an Account");

        newUsernamePrompt.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        newUsernamePrompt.setText("Username:");

        newPasswordPrompt.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        newPasswordPrompt.setText("Password:");

        newAccountConfirm.setText("Confirm");
        newAccountConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newAccountConfirmActionPerformed(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout newAccountPanelLayout = new javax.swing.GroupLayout(newAccountPanel);
        newAccountPanel.setLayout(newAccountPanelLayout);
        newAccountPanelLayout.setHorizontalGroup(
            newAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(newAccountTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(newAccountPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newUsernamePrompt)
                    .addComponent(newPasswordPrompt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(newAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(newPasswordInput, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(newUsernameInput))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newAccountPanelLayout.createSequentialGroup()
                .addContainerGap(100, Short.MAX_VALUE)
                .addComponent(newAccountConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85))
            .addComponent(jSeparator1)
        );
        newAccountPanelLayout.setVerticalGroup(
            newAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newAccountPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newAccountTitle)
                .addGap(2, 2, 2)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(newAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newUsernamePrompt)
                    .addComponent(newUsernameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(69, 69, 69)
                .addGroup(newAccountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newPasswordPrompt)
                    .addComponent(newPasswordInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(newAccountConfirm)
                .addGap(29, 29, 29))
        );

        accountOutput.setForeground(new java.awt.Color(255, 51, 51));
        accountOutput.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        accountOutput.setText("Awaiting Login Information");

        javax.swing.GroupLayout accountPanelLayout = new javax.swing.GroupLayout(accountPanel);
        accountPanel.setLayout(accountPanelLayout);
        accountPanelLayout.setHorizontalGroup(
            accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accountPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(accountOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(accountPanelLayout.createSequentialGroup()
                        .addComponent(loginPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 222, Short.MAX_VALUE)
                        .addComponent(newAccountPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        accountPanelLayout.setVerticalGroup(
            accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, accountPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(newAccountPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loginPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addComponent(accountOutput)
                .addContainerGap())
        );

        mainPanelTabbed.addTab("Account Details", null, accountPanel, "This is where you can login or create an account.");

        classroomTableDisplay.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student Name", "Score"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        classroomTableDisplay.getTableHeader().setResizingAllowed(false);
        classroomTableDisplay.getTableHeader().setReorderingAllowed(false);
        classroomTable.setViewportView(classroomTableDisplay);
        if (classroomTableDisplay.getColumnModel().getColumnCount() > 0) {
            classroomTableDisplay.getColumnModel().getColumn(0).setResizable(false);
            classroomTableDisplay.getColumnModel().getColumn(1).setResizable(false);
        }

        addStudentPanel.setBackground(new java.awt.Color(153, 153, 153));
        addStudentPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        newStudentLabel.setForeground(new java.awt.Color(0, 0, 204));
        newStudentLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newStudentLabel.setText("Add Student Name:");

        newScoreLabel.setForeground(new java.awt.Color(0, 0, 204));
        newScoreLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newScoreLabel.setText("Add Student Score:");

        studentScoreInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentScoreInputActionPerformed(evt);
            }
        });

        studentInfoSubmitButton.setText("Submit");
        studentInfoSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentInfoSubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addStudentPanelLayout = new javax.swing.GroupLayout(addStudentPanel);
        addStudentPanel.setLayout(addStudentPanelLayout);
        addStudentPanelLayout.setHorizontalGroup(
            addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(studentInfoSubmitButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(addStudentPanelLayout.createSequentialGroup()
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(newStudentLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                    .addComponent(newScoreLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(studentScoreInput)
                    .addComponent(studentNameInput))
                .addContainerGap())
        );
        addStudentPanelLayout.setVerticalGroup(
            addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newStudentLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(studentNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newScoreLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(studentScoreInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(studentInfoSubmitButton))
        );

        addStudentPanelLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        addStudentPanelLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addStudentPanelLabel.setText("Add Student");

        editStudentPanel.setBackground(new java.awt.Color(153, 153, 153));
        editStudentPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        editStudentInfoSubmitButton.setText("Submit");
        editStudentInfoSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editStudentInfoSubmitButtonActionPerformed(evt);
            }
        });

        editStudentNameLabel.setForeground(new java.awt.Color(0, 0, 204));
        editStudentNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        editStudentNameLabel.setText("Student Name:");

        editStudentScoreLabel.setForeground(new java.awt.Color(0, 0, 204));
        editStudentScoreLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        editStudentScoreLabel.setText("New Student Score:");

        javax.swing.GroupLayout editStudentPanelLayout = new javax.swing.GroupLayout(editStudentPanel);
        editStudentPanel.setLayout(editStudentPanelLayout);
        editStudentPanelLayout.setHorizontalGroup(
            editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(editStudentInfoSubmitButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(editStudentNameLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(editStudentScoreLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
            .addGroup(editStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(selectedStudentInput)
                    .addComponent(newScoreInput))
                .addContainerGap())
        );
        editStudentPanelLayout.setVerticalGroup(
            editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(editStudentNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectedStudentInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editStudentScoreLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newScoreInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(editStudentInfoSubmitButton))
        );

        editStudentPanelLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        editStudentPanelLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        editStudentPanelLabel.setText("Edit Student Score");

        deleteStudentPanel.setBackground(new java.awt.Color(153, 153, 153));
        deleteStudentPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        deleteStudentConfirm.setText("Confirm");
        deleteStudentConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteStudentConfirmActionPerformed(evt);
            }
        });

        deleteStudentPrompt.setForeground(new java.awt.Color(0, 0, 204));
        deleteStudentPrompt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        deleteStudentPrompt.setText("Student Name:");

        javax.swing.GroupLayout deleteStudentPanelLayout = new javax.swing.GroupLayout(deleteStudentPanel);
        deleteStudentPanel.setLayout(deleteStudentPanelLayout);
        deleteStudentPanelLayout.setHorizontalGroup(
            deleteStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(deleteStudentConfirm, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(deleteStudentPrompt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deleteStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(deleteStudentInput)
                .addContainerGap())
        );
        deleteStudentPanelLayout.setVerticalGroup(
            deleteStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deleteStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(deleteStudentPrompt)
                .addGap(18, 18, 18)
                .addComponent(deleteStudentInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(deleteStudentConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        deleteStudentPanelLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        deleteStudentPanelLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        deleteStudentPanelLabel.setText("Delete Student");

        classroomOutput.setForeground(new java.awt.Color(255, 0, 0));
        classroomOutput.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        classroomOutput.setText("Classroom Editing");

        updateTable.setText("Update Table");
        updateTable.setToolTipText("Sometimes the variables glitch up, if you need to restore the table, click this.");
        updateTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateTableActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout classroomCreatePanelLayout = new javax.swing.GroupLayout(classroomCreatePanel);
        classroomCreatePanel.setLayout(classroomCreatePanelLayout);
        classroomCreatePanelLayout.setHorizontalGroup(
            classroomCreatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, classroomCreatePanelLayout.createSequentialGroup()
                .addGroup(classroomCreatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(classroomOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, classroomCreatePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(classroomCreatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deleteStudentPanelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(classroomCreatePanelLayout.createSequentialGroup()
                                .addComponent(deleteStudentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, classroomCreatePanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(classroomCreatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(classroomCreatePanelLayout.createSequentialGroup()
                                        .addComponent(addStudentPanelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(editStudentPanelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, classroomCreatePanelLayout.createSequentialGroup()
                                        .addComponent(addStudentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(editStudentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, classroomCreatePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(updateTable)))
                .addGap(6, 6, 6)
                .addComponent(classroomTable, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        classroomCreatePanelLayout.setVerticalGroup(
            classroomCreatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(classroomCreatePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(classroomCreatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(classroomTable, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                    .addGroup(classroomCreatePanelLayout.createSequentialGroup()
                        .addGroup(classroomCreatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addStudentPanelLabel)
                            .addComponent(editStudentPanelLabel))
                        .addGap(2, 2, 2)
                        .addGroup(classroomCreatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addStudentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(editStudentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteStudentPanelLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(classroomCreatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteStudentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(updateTable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(classroomOutput)))
                .addContainerGap())
        );

        mainPanelTabbed.addTab("Classroom", null, classroomCreatePanel, "This is where you can add students");

        activeAccount.setForeground(new java.awt.Color(0, 0, 255));
        activeAccount.setText("Not logged in.");

        jMenu1.setText("Options");

        jMenuItem1.setText("Log out");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(titleSeperator)
            .addComponent(mainPanelTabbed)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(activeAccount)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(activeAccount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(titleSeperator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mainPanelTabbed))
        );

        mainPanelTabbed.getAccessibleContext().setAccessibleName("Account Setup");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        if (loggedIn) {
            loggedIn = false;
            activeAccount.setText("Logged out.");
            accountOutput.setText("Logged out. Please log in to continue.");
            emptyTable();

        } else {
            activeAccount.setText("You are not currently logged in.");
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void mainPanelTabbedMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainPanelTabbedMouseClicked

    }//GEN-LAST:event_mainPanelTabbedMouseClicked

    private void deleteStudentConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteStudentConfirmActionPerformed
        String student = deleteStudentInput.getText();
        String studentPath = path + "StudentHavenAccounts/Students/" + student + ".txt";
        String teacherPath = path + "StudentHavenAccounts/" + username + ".txt";

        String sep = ":";
        String col = "student";

        File textFile = new File(studentPath);
        FileReader in;
        BufferedReader readFile;

        ArrayList list = new ArrayList();
        int listCounter = 0;

        if (textFile.delete()) {
            classroomOutput.setText("Deleted a student");
        } else {
            classroomOutput.setText("Error: Student was not removed.");
        }

        System.out.println("Eric, you didn't finish this feature, look at the code.");
        //Check the [private void editStudentInfoSubmitButtonActionPerformed] right below this void for reference on how to build this method.
    }//GEN-LAST:event_deleteStudentConfirmActionPerformed

    private void editStudentInfoSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editStudentInfoSubmitButtonActionPerformed
        String student = selectedStudentInput.getText();
        String score = newScoreInput.getText();
        String currentPath = path + "StudentHavenAccounts/Students/" + student + ".txt";
        String scoreTBC = null;
        String line = null;

        File textFile = new File(currentPath);
        FileReader in;
        BufferedReader readFile;

        String sep = ":";
        String col = "score";

        ArrayList list = new ArrayList();
        int listCounter = 0;

        try {
            in = new FileReader(textFile);
            readFile = new BufferedReader(in);
            while ((line = readFile.readLine()) != null) {
                listCounter++;
                list.add(line);
            }
            readFile.close();
            in.close();
        } catch (FileNotFoundException e) {
            System.out.println("No account by that name.");
            classroomOutput.setText("No student by that name was found - Make sure you spelled it right. (Case sensitive)");
            System.err.println("FileNotFoundException: " + e.getMessage());
        } catch (IOException e) {
            System.out.println("Problem reading file.");
            classroomOutput.setText("There was a problem reading the file, please try again.");
            System.err.println("IOException: " + e.getMessage());
        }

        Object[] listTracker = list.toArray();

        for (int i = 0; i < listCounter; i++) {
            String test = listTracker[i].toString();
            if (test.contains(col + sep)) {
                scoreTBC = test.substring(col.length() + 1);
                test = test.replaceAll(scoreTBC, score);
                System.out.println(test);
                listTracker[i] = test;
            }
        }

        FileWriter write = null;
        PrintWriter print_line;
        try {
            write = new FileWriter(currentPath);
        } catch (IOException ex) {
            Logger.getLogger(CulminatingProject.class.getName()).log(Level.SEVERE, null, ex);
        }
        print_line = new PrintWriter(write);
        for (int i = 0; i < listCounter; i++) {
            print_line.printf("%s" + "%n", listTracker[i]);
        }
        print_line.close();
        emptyTable();
        addStudents();
        classroomOutput.setText("Student score changed sucessfully");
    }//GEN-LAST:event_editStudentInfoSubmitButtonActionPerformed

    private void studentInfoSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentInfoSubmitButtonActionPerformed
        String student;
        int score;
        student = studentNameInput.getText();
        score = Integer.parseInt(studentScoreInput.getText());

        if (loggedIn) {
            System.out.println("Student Name:" + student);
            System.out.println("Student Score:" + score);
            try {
                newStudent(student, score, username);
                System.out.println("All good! New Student Created!");
                classroomOutput.setText("New Student added! " + student + ", " + score);
            } catch (IOException ex) {
                Logger.getLogger(CulminatingProject.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("There was an error!");
                classroomOutput.setText("An error occured");
                System.err.println("Error:" + ex);
            }
        } else {
            System.out.println("You're not logged in! Please log in to edit student information!");
            classroomOutput.setText("Log in to edit student information!");
        }
    }//GEN-LAST:event_studentInfoSubmitButtonActionPerformed

    private void studentScoreInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentScoreInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentScoreInputActionPerformed

    private void newAccountConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newAccountConfirmActionPerformed
        String username;
        String password;

        username = newUsernameInput.getText();
        password = newPasswordInput.getText();
        System.out.println("Creating a new account... using these credentials: ");
        System.out.println("Username: " + username + "\nPassword: " + password);
        try {
            accountOutput.setText(NewAccount(username, password));
        } catch (IOException e) {
            System.out.println("Didn't allow us to write to the file...");
            System.err.println("Error: " + e);
            accountOutput.setText("An error occured. Error: " + e);
        }
    }//GEN-LAST:event_newAccountConfirmActionPerformed

    private void loginConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginConfirmActionPerformed
        String password;

        username = usernameInput.getText();
        password = passwordInput.getText();
        System.out.println("Logging in using these credentials...");
        System.out.println("Username: " + username + "\nPassword: " + password);
        accountOutput.setText(LogIn(username, password));
        if (LogIn(username, password) == "Logged in!") {
            activeAccount.setText("Welcome, " + username + "!");
            loggedIn = true;
            addStudents();
        }
    }//GEN-LAST:event_loginConfirmActionPerformed

    private void pathConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pathConfirmButtonActionPerformed
        String filePath;
        filePath = pathInput.getText();
        path = filePath;
        filePath = filePath + "\\StudentHavenAccounts\\Students";

        File f = new File(filePath);
        try {
            if (f.mkdir()) {
                System.out.println("Directory Created");
                pathOutput.setText("Directory Created!");
            } else {
                System.out.println("Directory is not created");
                pathOutput.setText("An error occured creating the directory.");
            }
            if (f.exists()) {
                System.out.println("Location already exists!");
                pathOutput.setText("Existing Directory Selected");
            }
        } catch (Exception e) {
            e.printStackTrace();
            pathOutput.setText("An error occured!");
        }
    }//GEN-LAST:event_pathConfirmButtonActionPerformed

    private void updateTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateTableActionPerformed
        emptyTable();
        addStudents();
    }//GEN-LAST:event_updateTableActionPerformed

    public void emptyTable() {
        DefaultTableModel model = (DefaultTableModel) classroomTableDisplay.getModel();
        int rows = model.getRowCount();
        System.out.println(rows);
        for (int i = 0; i < rows - 1; i++) {
            model.removeRow(0);
        }
    }

    public void addStudents() {                                                  //Add Students
        String teacherPath = path + "StudentHavenAccounts/" + username + ".txt";
        File textFile = new File(teacherPath);
        FileReader in;
        BufferedReader readFile;

        String sep = ":";
        String col = "student";
        String studentName = null;
        String studentScore = null;
        int studentCount = 0;

        ArrayList studentList = new ArrayList();
        ArrayList scoreList = new ArrayList();

        try {
            in = new FileReader(textFile);
            readFile = new BufferedReader(in);
            while ((studentName = readFile.readLine()) != null) {
                if (studentName.contains(col + sep)) {
                    studentName = studentName.substring(col.length() + 1);
                    System.out.println(studentName);
                    studentCount++;

                    studentList.add(studentName);
                }
                System.out.println(studentList);
            }
            readFile.close();
            in.close();
        } catch (FileNotFoundException e) {
            System.out.println("No account by that name.");
            System.err.println("FileNotFoundException: " + e.getMessage());
        } catch (IOException e) {
            System.out.println("Problem reading file.");
            System.err.println("IOException: " + e.getMessage());
        }

        Object[] studentTracker = studentList.toArray();
        for (int i = 0; i < studentCount; i++) {
            String studentPath = path + "StudentHavenAccounts/Students/" + studentTracker[i] + ".txt";
            textFile = new File(studentPath);
            col = "score";

            try {
                in = new FileReader(textFile);
                readFile = new BufferedReader(in);
                while ((studentScore = readFile.readLine()) != null) {
                    if (studentScore.contains(col + sep)) {
                        studentScore = studentScore.substring(col.length() + 1);
                        System.out.println(studentScore);
                        scoreList.add(studentScore);
                        System.out.println(scoreList);
                    }
                }
                readFile.close();
                in.close();
            } catch (FileNotFoundException e) {
                System.out.println("No account by that name.");
                System.err.println("FileNotFoundException: " + e.getMessage());
            } catch (IOException e) {
                System.out.println("Problem reading file.");
                System.err.println("IOException: " + e.getMessage());
            }
        }
        Object[] scoreTracker = scoreList.toArray();
        for (int i = 0; i < studentCount; i++) {
            Object[] row = {studentTracker[i], scoreTracker[i]};
            DefaultTableModel model = (DefaultTableModel) classroomTableDisplay.getModel();
            model.addRow(row);
            System.out.println("Did it!");
        }
    }

    public void newStudent(String student, int score, String username) throws IOException { //New Student
        File textFile;
        String studentPath = path + "StudentHavenAccounts/Students/" + student + ".txt";
        String teacherPath = path + "StudentHavenAccounts/" + username + ".txt";
        String teacherTrack = String.format("%s%n", "student:" + student);
        FileWriter write;
        PrintWriter print_line;
        textFile = new File(studentPath);

        if (textFile.exists()) {
            System.out.println("Student by that name already exists.");
        } else {
            try {
                textFile.createNewFile();
                System.out.println("New student file created.");

            } catch (IOException e) {
                System.out.println("The file could not be created.");
                System.err.println(e.getMessage());
            }
        }

        write = new FileWriter(studentPath);
        print_line = new PrintWriter(write);
        print_line.printf("%s" + "%n", "teacher:" + username);
        print_line.printf("%s" + "%n", "score:" + score);
        print_line.close();

        try {
            Files.write(Paths.get(teacherPath), teacherTrack.getBytes(), StandardOpenOption.APPEND);
        } catch (IOException e) {

        }

        Object[] row = {student, score};
        DefaultTableModel model = (DefaultTableModel) classroomTableDisplay.getModel();
        model.addRow(row);

    }

    public String LogIn(String givenUsername, String givenPassword) {           //Log in
        String currentPath = path + "StudentHavenAccounts/" + givenUsername + ".txt";
        File textFile = new File(currentPath);
        FileReader in;
        BufferedReader readFile;
        String realPassword = null;
        String endPass = "";
        givenPassword = "password:" + givenPassword;

        try {
            in = new FileReader(textFile);
            readFile = new BufferedReader(in);
            while ((realPassword = readFile.readLine()) != null) {
                endPass = realPassword.substring(0, givenPassword.length());
                if (givenPassword.equals(endPass)) {
                    return ("Logged in!");
                }
            }
            readFile.close();
            in.close();
        } catch (FileNotFoundException e) {
            System.out.println("No account by that name.");
            System.err.println("FileNotFoundException: " + e.getMessage());
            return ("No account by that name was found.");
        } catch (IOException e) {
            System.out.println("Problem reading file.");
            System.err.println("IOException: " + e.getMessage());
            return ("An error occured- IOException:" + e.getMessage());
        }
        if (givenPassword.equals(endPass)) {
            return ("Logged in!");
        } else {
            return ("The password is incorrect");
        }
    }

    public String NewAccount(String username, String password) throws IOException { //Create account
        File textFile;
        String currentPath = path + "StudentHavenAccounts/" + username + ".txt";
        FileWriter write;
        PrintWriter print_line;
        textFile = new File(currentPath);

        if (textFile.exists()) {
            System.out.println("Account already exists.");
            return ("Account already exists.");
        } else {
            try {
                textFile.createNewFile();
                System.out.println("New file created.");
            } catch (IOException e) {
                System.out.println("The file could not be created.");
                System.err.println(e.getMessage());
                return ("An error occured, the account couldn't be created.");
            }
        }
        write = new FileWriter(currentPath);
        print_line = new PrintWriter(write);
        print_line.printf("%s" + "%n", "password:" + password);
        print_line.close();
        return ("Account created.");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CulminatingProject.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CulminatingProject.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CulminatingProject.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CulminatingProject.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CulminatingProject().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel accountOutput;
    private javax.swing.JPanel accountPanel;
    private javax.swing.JLabel activeAccount;
    private javax.swing.JPanel addStudentPanel;
    private javax.swing.JLabel addStudentPanelLabel;
    private javax.swing.JPanel classroomCreatePanel;
    private javax.swing.JLabel classroomOutput;
    private javax.swing.JScrollPane classroomTable;
    private javax.swing.JTable classroomTableDisplay;
    private javax.swing.JButton deleteStudentConfirm;
    private javax.swing.JTextField deleteStudentInput;
    private javax.swing.JPanel deleteStudentPanel;
    private javax.swing.JLabel deleteStudentPanelLabel;
    private javax.swing.JLabel deleteStudentPrompt;
    private javax.swing.JButton editStudentInfoSubmitButton;
    private javax.swing.JLabel editStudentNameLabel;
    private javax.swing.JPanel editStudentPanel;
    private javax.swing.JLabel editStudentPanelLabel;
    private javax.swing.JLabel editStudentScoreLabel;
    private javax.swing.JLabel example1;
    private javax.swing.JLabel example2;
    private javax.swing.JLabel examplePrompt;
    private javax.swing.JPanel filePanel;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel locationDesc1;
    private javax.swing.JLabel locationDesc2;
    private javax.swing.JLabel locationDesc3;
    private javax.swing.JLabel locationPromptLabel;
    private javax.swing.JButton loginConfirm;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JLabel loginTitle;
    private javax.swing.JTabbedPane mainPanelTabbed;
    private javax.swing.JLabel mainTitle;
    private javax.swing.JButton newAccountConfirm;
    private javax.swing.JPanel newAccountPanel;
    private javax.swing.JLabel newAccountTitle;
    private javax.swing.JPasswordField newPasswordInput;
    private javax.swing.JLabel newPasswordPrompt;
    private javax.swing.JTextField newScoreInput;
    private javax.swing.JLabel newScoreLabel;
    private javax.swing.JLabel newStudentLabel;
    private javax.swing.JTextField newUsernameInput;
    private javax.swing.JLabel newUsernamePrompt;
    private javax.swing.JPasswordField passwordInput;
    private javax.swing.JLabel passwordPrompt;
    private javax.swing.JButton pathConfirmButton;
    private javax.swing.JTextField pathInput;
    private javax.swing.JLabel pathOutput;
    private javax.swing.JLabel redNoteLocationLabel;
    private javax.swing.JTextField selectedStudentInput;
    private javax.swing.JButton studentInfoSubmitButton;
    private javax.swing.JTextField studentNameInput;
    private javax.swing.JTextField studentScoreInput;
    private javax.swing.JLabel titlePrompt;
    private javax.swing.JSeparator titleSeperator;
    private javax.swing.JButton updateTable;
    private javax.swing.JTextField usernameInput;
    private javax.swing.JLabel usernamePrompt;
    // End of variables declaration//GEN-END:variables
}
